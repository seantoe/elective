{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/visitor.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction VisitorComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VisitorComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Visit date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VisitorComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Purpose of visit is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"submitted\": a0\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    \"has-error\": a0\n  };\n};\n\nexport let VisitorComponent = /*#__PURE__*/(() => {\n  class VisitorComponent {\n    constructor(service, toastr) {\n      this.service = service;\n      this.toastr = toastr;\n    }\n\n    ngOnInit() {\n      this.service.refreshList();\n    }\n\n    populateForm(selectedRecord) {\n      this.service.formData = Object.assign({}, selectedRecord);\n    }\n\n    onSubmit(form) {\n      this.service.formSubmitted = true;\n\n      if (form.valid) {\n        if (this.service.formData.visitorId == 0) this.insertRecord(form);else this.updateRecord(form);\n      }\n    }\n\n    insertRecord(form) {\n      this.service.postVisitorDetail().subscribe({\n        next: res => {\n          this.service.list = res;\n          this.toastr.success('Inserted successfully', 'Visitor Details Registered');\n          this.resetFormAndClearFields(form);\n        },\n        error: err => {\n          console.log(err);\n          this.toastr.error('Insert failed', 'Error');\n        }\n      });\n    }\n\n    updateRecord(form) {\n      this.service.putVisitorDetail().subscribe({\n        next: res => {\n          this.service.list = res;\n          this.toastr.info('Updated successfully', 'Visitor Details Registered');\n          this.resetFormAndClearFields(form);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n\n    onDelete(id) {\n      if (confirm('Are you sure you want to delete this record?')) {\n        this.service.deleteVisitorDetail(id).subscribe({\n          next: () => {\n            this.service.list = this.service.list.filter(v => v.visitorId !== id);\n            this.toastr.success('Deleted successfully', 'Visitor Details Registered');\n          },\n          error: err => {\n            console.log(err);\n            this.toastr.error('Delete failed', 'Error');\n          }\n        });\n      }\n    }\n\n    resetFormAndClearFields(form) {\n      this.service.resetForm(form);\n      form.resetForm();\n    }\n\n  }\n\n  VisitorComponent.ɵfac = function VisitorComponent_Factory(t) {\n    return new (t || VisitorComponent)(i0.ɵɵdirectiveInject(i1.VisitorService), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n\n  VisitorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VisitorComponent,\n    selectors: [[\"app-visitor\"]],\n    decls: 26,\n    vars: 19,\n    consts: [[1, \"form-container\"], [\"novalidate\", \"\", 3, \"ngClass\", \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"hidden\", \"name\", \"visitorId\", 3, \"value\"], [1, \"form-group\", 3, \"ngClass\"], [\"for\", \"name\"], [\"type\", \"text\", \"placeholder\", \"Type full name here\", \"name\", \"visitorName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"visitorName\", \"ngModel\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"visitDate\"], [\"type\", \"date\", \"name\", \"visitDate\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"visitDate\", \"ngModel\"], [\"for\", \"purpose\"], [\"type\", \"text\", \"placeholder\", \"Type purpose of visit here\", \"name\", \"visitorPurpose\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"visitorPurpose\", \"ngModel\"], [\"type\", \"submit\"], [1, \"error\"]],\n    template: function VisitorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Visitor Log\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function VisitorComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function VisitorComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.service.formData.visitorName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, VisitorComponent_div_11_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Visit Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function VisitorComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.service.formData.visitDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, VisitorComponent_div_17_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Purpose\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 13, 14);\n        i0.ɵɵlistener(\"ngModelChange\", function VisitorComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.service.formData.visitorPurpose = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, VisitorComponent_div_23_Template, 2, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 15);\n        i0.ɵɵtext(25, \"Add Visitor\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n\n        const _r1 = i0.ɵɵreference(10);\n\n        const _r3 = i0.ɵɵreference(16);\n\n        const _r5 = i0.ɵɵreference(22);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, _r0.submitted));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.service.formData.visitorId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, _r1.invalid && _r0.submitted));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.visitorName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r0.submitted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, _r3.invalid && _r0.submitted));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.visitDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r0.submitted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c1, _r5.invalid && _r0.submitted));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.service.formData.visitorPurpose);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r0.submitted);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".form-container[_ngcontent-%COMP%]{max-width:1000px;margin:0 auto;padding:20px;background-color:#f9f9f9;border-radius:8px;box-shadow:0 2px 4px #0000001a}h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{text-align:center;color:#333;margin:20px 0;font-weight:600}form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;color:#555}.form-group.has-error[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:#e74c3c}.error[_ngcontent-%COMP%]{color:#e74c3c;font-size:12px;margin-top:5px}input[type=text][_ngcontent-%COMP%], input[type=date][_ngcontent-%COMP%]{padding:10px;border:1px solid #ccc;border-radius:4px;font-size:16px;transition:border-color .3s}input[type=text][_ngcontent-%COMP%]:focus, input[type=date][_ngcontent-%COMP%]:focus{border-color:#007bff}button[type=submit][_ngcontent-%COMP%]{padding:10px 20px;background-color:#007bff;color:#fff;border:none;border-radius:4px;font-size:18px;cursor:pointer;transition:background-color .3s;font-weight:600}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3}.visitor-list[_ngcontent-%COMP%]{margin-top:30px}.visitor-list[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:15px}.visitor-card[_ngcontent-%COMP%]{background:white;padding:15px;border-radius:8px;margin-bottom:10px;box-shadow:0 0 10px #0000001a}.visitor-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:5px 0;color:#555}.visitor-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{color:#333}.visitor-list[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}.visitor-list[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .visitor-list[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:12px 15px;border:1px solid #ddd}.visitor-list[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#f2f2f2;text-align:center}.visitor-list[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:center}.visitor-list[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f2f2f2}.delete-icon[_ngcontent-%COMP%]{cursor:pointer}.mouse-hover[_ngcontent-%COMP%]:hover{color:red}.form-group.has-error[_ngcontent-%COMP%]   input.ng-invalid.ng-touched[_ngcontent-%COMP%], .form-group.has-error[_ngcontent-%COMP%]   input.ng-invalid.ng-dirty[_ngcontent-%COMP%], .form-group.has-error[_ngcontent-%COMP%]   input.ng-invalid.ng-untouched[_ngcontent-%COMP%], .has-error[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:red}.error[_ngcontent-%COMP%]{color:red;font-size:12px;margin-top:5px}@media (max-width: 600px){.form-container[_ngcontent-%COMP%]{padding:15px}input[type=text][_ngcontent-%COMP%], input[type=date][_ngcontent-%COMP%], button[type=submit][_ngcontent-%COMP%]{font-size:14px}}\"]\n  });\n  return VisitorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}