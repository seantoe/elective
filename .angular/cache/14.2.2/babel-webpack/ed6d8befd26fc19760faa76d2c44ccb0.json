{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../shared/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \" *Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \" *Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, auth, router) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    onLogin() {\n      if (this.loginForm.valid) {\n        console.log(this.loginForm.value); // send the obj to database\n\n        this.auth.login(this.loginForm.value).subscribe({\n          next: res => {\n            alert(res.message);\n            this.loginForm.reset();\n            this.router.navigate(['first']);\n          },\n          error: err => {\n            alert(err?.error.message);\n          }\n        });\n      } else {\n        console.log(\"Form is not valid\"); // Throw the error using toaster and with required field\n\n        this.validateAllFormFields(this.loginForm);\n        alert(\"Your form is invalid\");\n      }\n    }\n\n    validateAllFormFields(formGroup) {\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field);\n\n        if (control instanceof FormControl) {\n          control.markAsDirty({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup) {\n          this.validateAllFormFields(control);\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 25,\n    vars: 7,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7)(9, \"div\", 8)(10, \"div\", 9);\n        i0.ɵɵelement(11, \"span\", 10)(12, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, LoginComponent_small_13_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9);\n        i0.ɵɵelement(16, \"span\", 13)(17, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, LoginComponent_small_18_Template, 2, 0, \"small\", 12);\n        i0.ɵɵelementStart(19, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵtext(22, \"Don't have an account?\");\n        i0.ɵɵelementStart(23, \"a\", 17);\n        i0.ɵɵtext(24, \" Sign Up\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      }\n    },\n    dependencies: [i4.NgIf, i3.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".panel-heading[_ngcontent-%COMP%]{text-align:center;margin-bottom:10px}#forget[_ngcontent-%COMP%]{min-width:100px;margin-left:auto;text-decoration:none;cursor:pointer}a[_ngcontent-%COMP%]:hover{text-decoration:none}.form-inline[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{padding-left:10px;margin:0;cursor:pointer}.btn[_ngcontent-%COMP%]{margin-top:20px;border-radius:15px}.panel[_ngcontent-%COMP%]{min-height:380px;box-shadow:20px 20px 80px #dadada;border-radius:12px;margin-top:100px}.input-field[_ngcontent-%COMP%]{border-radius:5px;padding:5px;display:flex;align-items:center;cursor:pointer;border:1px solid #ddd;color:#0f0f0f}.input-field.error[_ngcontent-%COMP%]{border:1px solid red;color:red}input[type=text][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{border:none;outline:none;box-shadow:none;width:100%}.fa-eye-slash.btn[_ngcontent-%COMP%]{border:none;outline:none;box-shadow:none}img[_ngcontent-%COMP%]{width:40px;height:40px;object-fit:cover;border-radius:50%;position:relative}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}